#!/usr/bin/env bash

cf_make_venv_relocatable() {
    # Traverses all executables in a virtual environment directory located in $CF_VENV_BASE and
    # replaces absolute shebangs with relative ones using /usr/bin/env.
    #
    # Arguments:
    #   1. The name of the virtual env inside $CF_VENV_BASE.
    #
    # Required environment variables:
    #   CF_VENV_BASE
    #       The base path where AP virtual environments are stored.

    # zsh options
    local shell_is_zsh="$( [ -z "${ZSH_VERSION}" ] && echo "false" || echo "true" )"
    if ${shell_is_zsh}; then
        emulate -L bash
        setopt globdots
    fi

    # check arguments
    local name="$1"
    if [ -z "${name}" ]; then
        2>&1 echo "argument 0 (venv name) must not be empty"
        return "1"
    fi

    # check environment variables
    if [ -z "${CF_VENV_BASE}" ]; then
        2>&1 echo "environment variable CF_VENV_BASE must not be empty"
        return "2"
    fi

    # use /usr/bin/env in shebang's of bin scripts
    local f
    for f in $( find "${CF_VENV_BASE}/${name}/bin" -type f ); do
        # must be readable and executable
        if [ -r "${f}" ] && [ -x "${f}" ]; then
            sed -i -r "s/#\!\/.+\/bin\/(python[\\\/]*)/#\!\/usr\/bin\/env \1/" "$f"
            [ "$?" != "0" ] && return "3"
        fi
    done

    # replace all symlinked files pointing outside of the venv with copies
    for f in $( find "${CF_VENV_BASE}/${name}" -type l ); do
        local real_dir
        local link_f="$( readlink "${f}" )"
        [ "$?" != "0" ] && return "4"
        if [ "${link_f:0:1}" = "/" ]; then
            # absolute link
            real_dir="$( cd "$( dirname "${link_f}" )" && echo "${PWD}" )"
            [ "$?" != "0" ] && return "5"
        elif [ "${link_f:0:1}" = "." ]; then
            # relative link
            real_dir="$( cd "$( dirname "$( dirname "${f}" )/${link_f}" )" && echo "${PWD}" )"
            [ "$?" != "0" ] && return "5"
        else
            # local link, always contained in venv
            continue
        fi
        # do nothing when the directory is contained in the venv dir
        if [[ "${real_dir}/" == "${CF_VENV_BASE}/${name}/"* ]]; then
            continue
        fi
        # complain when a directory is found
        if [ -d "${f}" ]; then
            2>&1 echo "cannot handle symlinked directory ${f} in venv ${name} for relocation"
            continue
        fi
        # copy
        local real_f="${real_dir}/$( basename "${link_f}" )"
        # echo "replace symlink ${f} with ${real_f}"
        unlink "${f}" || return "6"
        cp "${real_f}" "${f}" || return "7"
    done
}

cf_make_venv_relocatable "$@"
